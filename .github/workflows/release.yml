name: Release Build
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release Tag"
        required: true
jobs:
  libcore:
    name: Native Build (LibCore)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Golang Status
        run: find buildScript libcore/*.sh | xargs cat | sha1sum > golang_status
      - name: Libcore Status
        run: git ls-files libcore | xargs cat | sha1sum > libcore_status
      - name: LibCore Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'golang_status', 'libcore_status') }}
      - name: Install Golang
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
      - name: Native Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: ./run lib core

      - name: Upload AAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AAR
          path: app/libs/libcore.aar

  publish:
    name: Publish AAR Release
    runs-on: ubuntu-latest
    needs: libcore
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download AAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: AAR
          path: release-artifacts

      - name: Release AAR
        run: |
          wget -O ghr.tar.gz https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz
          tar -xvf ghr.tar.gz
          mv ghr*linux_amd64/ghr .
          ./ghr -delete -t "${{ github.token }}" -n "${{ github.event.inputs.tag }}" "${{ github.event.inputs.tag }}" release-artifacts
